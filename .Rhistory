spl_df <- read.csv(~documents/"2022-23-checkouts.csv", stringsAsFactors = FALSE)
# Exercise 1: Load the data
# Download and unzip one or more of the SPL datasets and load here from a file path
spl_df <- read.csv(finnbrown@Finns-MacBook-Air/documents/"2022-23-checkouts.csv", stringsAsFactors = FALSE)
# Exercise 1: Load the data
# Download and unzip one or more of the SPL datasets and load here from a file path
spl_df <- read.csv(Finns-MacBook-Air/documents/"2022-23-checkouts.csv", stringsAsFactors = FALSE)
# Exercise 1: Load the data
# Download and unzip one or more of the SPL datasets and load here from a file path
spl_df <- read.csv(/documents/"2022-23-checkouts.csv", stringsAsFactors = FALSE)
# Exercise 1: Load the data
# Download and unzip one or more of the SPL datasets and load here from a file path
spl_df <- read.csv(documents/"2022-23-checkouts.csv", stringsAsFactors = FALSE)
# Exercise 1: Load the data
# Download and unzip one or more of the SPL datasets and load here from a file path
spl_df <- read.csv("documents/2022-23-checkouts.csv", stringsAsFactors = FALSE)
# Exercise 1: Load the data
# Download and unzip one or more of the SPL datasets and load here from a file path
spl_df <- read.csv("documents/2022-23-checkouts.csv", stringsAsFactors = FALSE)
View(spl_df)
# Exercise 1: Load the data
# Download and unzip one or more of the SPL datasets and load here from a file path
spl_df <- read.csv("~/documents/2022-23-checkouts.csv", stringsAsFactors = FALSE)
spl_df <- spl_df %>%
mutate(spl_df, date = paste(CheckoutYear, "-", CheckoutMonth, "-", "01"))
spl_df <- spl_df %>%
mutate(spl_df, date = paste0(CheckoutYear, "-", CheckoutMonth, "-", "01"))
spl_df <- spl_df %>%
mutate(spl_df, date = paste0(CheckoutYear, "-0", CheckoutMonth, "-", "01"))
spl_df <- as.Date(date, "%Y-%m-%d")
spl_df <- as.Date(spl_df, date, "%Y-%m-%d")
?as.Date
spl_df$date <- as.Date(date, "%Y-%m-%d")
spl_df$date <- as.Date(spl_df$date, "%Y-%m-%d")
class(spl_df$date)
author_df <-
# Exercise 4: Now calculate the sum total checkouts for your author's works for *each month/date*
checkouts_per_month <- spl_df %>%
group_by(date) %>%
summarize(sum_checkouts = sum(Checkouts))
View(checkouts_per_month)
author_df <-
# Exercise 4: Now calculate the sum total checkouts for your author's works for *each month/date*
checkouts_per_month <- spl_df %>%
group_by(date) %>%
summarize(sum_checkouts = sum(Checkouts), na.rm = TRUE)
author_df <-
# Exercise 4: Now calculate the sum total checkouts for your author's works for *each month/date*
checkouts_per_month <- spl_df %>%
group_by(date) %>%
summarize(sum_checkouts = sum(Checkouts, na.rm = TRUE))
ggplot(spl_df) +
geom_line(aes(x = date, y = checkouts_per_month))
ggplot(spl_df) +
geom_line(aes(x = date, y = Checkouts))
ggplot(spl_df) +
geom_line(mapping = aes(x = date, y = Checkouts, na.rm = TRUE))
geom_line(mapping = aes(x = date, y = sum_checkouts)
ggplot(checkouts_per_month) +
ggplot(checkouts_per_month) +
geom_line(mapping = aes(x = date, y = sum_checkouts))
ggplot(checkouts_per_month) +
geom_line(mapping = aes(x = date, y = sum_checkouts)) +
labs(title = "Library Checkouts Each Month 2022-2023"
x = "date"
ggplot(checkouts_per_month) +
geom_line(mapping = aes(x = date, y = sum_checkouts)) +
labs(title = "Library Checkouts Each Month 2022-2023",
x = "date",
y = "total checkouts")
library("scales")
ggplot(checkouts_per_month) +
geom_line(mapping = aes(x = date, y = sum_checkouts)) +
labs(title = "Library Checkouts Each Month 2022-2023",
x = "date",
y = "total checkouts") +
scale_y_continuous(labels = label_number_si())
ggplot(checkouts_per_month) +
geom_line(mapping = aes(x = date, y = sum_checkouts)) +
labs(title = "Library Checkouts Each Month 2022-2023",
x = "date",
y = "total checkouts") +
scale_y_continuous(labels = scale_cut_si())
ggplot(checkouts_per_month) +
geom_line(mapping = aes(x = date, y = sum_checkouts)) +
labs(title = "Library Checkouts Each Month 2022-2023",
x = "date",
y = "total checkouts") +
scale_y_continuous(labels = scale_cut())
?label_number
ggplot(checkouts_per_month) +
geom_line(mapping = aes(x = date, y = sum_checkouts)) +
labs(title = "Library Checkouts Each Month 2022-2023",
x = "date",
y = "total checkouts") +
scale_y_continuous(labels = label_number_cut_si())
ggplot(checkouts_per_month) +
geom_line(mapping = aes(x = date, y = sum_checkouts)) +
labs(title = "Library Checkouts Each Month 2022-2023",
x = "date",
y = "total checkouts") +
scale_y_continuous(labels = label_number(scale_cut = cut_si()))
ggplot(checkouts_per_month) +
geom_line(mapping = aes(x = date, y = sum_checkouts)) +
labs(title = "Library Checkouts Each Month 2022-2023",
x = "date",
y = "total checkouts") +
scale_y_continuous(labels = label_number_si())
install.packages("nat")
install.packages("XQuartz")
library(stringr)
unique_ph <- unique(compiled_ph)
shiny::runApp('Documents/Winter2023/Info201/final-project-finchbrown')
runApp('Documents/Winter2023/Info201/final-project-finchbrown')
source("~/Downloads/W1D1_intro.R", echo=TRUE)
learnr::run_tutorial("00-intro", package = "qsslearnr")
run_tutorial("00-intro", package = "qsslearnr")
library(qsslearnr)
run_tutorial("00-intro", package = "qsslearnr")
learnr::run_tutorial("00-intro", package = "qsslearnr")
remotes::install_github("kosukeimai/qss-package", build_vignettes = TRUE)
remotes::install_github("kosukeimai/qss-package", build_vignettes = TRUE, force = TRUE)
remotes::install_github("rstudio/learnr")
remotes::install_github("rstudio/learnr", force = T)
remotes::install_github("rstudio-education/gradethis")
remotes::install_github("rstudio-education/gradethis", force = T)
remotes::install_github("mattblackwell/qsslearnr", force = T)
library(readr)
boston <- read_csv("Documents/Spring_2023/Data Science/problem_set_1/boston.csv")
View(boston)
covariate-df <- df[c, "treatment", "income", "male"]
covariate-df <- df[,c "treatment", "income", "male"]
covariate-df <- df[,c("treatment", "income", "male")]
df <- read.csv("boston.csv")
covariate-df <- df[,c("treatment", "income", "male")]
covariate_df <- df[,c("treatment", "income", "male")]
View(covariate_df)
trt_df <- subset(covariate_df, treatment == 1)
ctrl_df <- subset(covariate_df, treatment == 0)
View(ctrl_df)
income_trt <- mean(trt_df$income)
income_ctrl <- mean(ctrl_df$income)
income_trt <- median(trt_df$income)
income_ctrl <- median(ctrl_df$income)
male_trt <- mean(trt_df$male)
male_ctrl <- mean(ctrl_df$male)
income_diff <- income_trt - income_ctrl
sex_diff <- male_trt - male_ctrl
sex_diff <- male_ctrl - male_trt
View(df)
attitudes_df <- df[, c("treatment", "numberim.pre", "numberim.post")]
pre_avgs <- tapply(attitudes_df$numberim.pre, attitudes_df$treatment, mean)
pre_avgs <- tapply(attitudes_df$numberim.pre, attitudes_df$treatment, mean, na.rm = T)
pre_avgs
post_avgs <- tapply(attitudes_df$numberim.post, attitudes_df$treatment, mean, na.rm = T)
post_avgs
trt_pre_avg <- mean(attitudes_df$numberim.pre, na.rm = T)
trt_post_avg <- mean(attitudes_df$numberim.post, na.rm = T)
trt_pre <- mean(attitudes_df$numberim.pre[treatment == 1], na.rm = T)
trt_attitudes <- subset(attitudes_df, treatment == 1)
ctrl_attitudes <- subset(attitudes_df, treatment == 0)
# separating treatment and control groups
trt_attitudes <- subset(attitudes_df, treatment == 1)
ctrl_attitudes <- subset(attitudes_df, treatment == 0)
# calculating averages for each group
trt_pre <- mean(trt_attitudes$numberim.pre, na.rm = T)
trt_post <- mean(trt_attitudes$numberim.post, na.rm = T)
ctrl_pre <- mean(ctrl_attitudes$numberim.pre, na.rm = T)
ctrl_post <- mean(ctrl_attitudes$numberim.post, na.rm = T)
trt_diff <- trt_post - trt_pre
ctrl_diff <- ctrl_post - ctrl_pre
ctrl_overall <- mean(ctrl_attitudes, na.rm = T)
ctrl_overall <- (ctrl_pre + ctrl_post) / 2
trt_overall <- (trt_pre + trt_post) / 2
pre_overall <- mean(df$numberim.pre, na.rm = T)
post_overall <- mean(df$numberim.post, na.rm = T)
college_df <- subset(df, college == 1)
no_college_df <- subset(df, college == 0)
college_pre <- tapply(college_df$numberim.pre, college_df$treatment, mean, na.rm = T)
college_post <- tapply(college_df$numberim.pre, college_df$treatment, mean, na.rm = T)
college_pre <- tapply(college_df$numberim.pre, college_df$treatment, mean, na.rm = T)
college_post <- tapply(college_df$numberim.post, college_df$treatment, mean, na.rm = T)
nc_pre <- tapply(no_college_df$numberim.pre, college_df$treatment, mean, na.rm = T)
nc_pre <- tapply(no_college_df$numberim.pre, no_college_df$treatment, mean, na.rm = T)
nc_post <- tapply(no_college_df$numberim.post, no_college_df$treatment, mean, na.rm = T)
college_pre
college_pre
college_post
nc_pre
nc_post
nc_post[2]
c_t_diff <- college_post[2] - college_pre[2]
c_c_diff <- college_post[1] - college_pre[1]
nc_t_diff <- nc_post[2] - nc_pre[2]
nc_c_diff <- nc_post[1] - nc_pre[1]
nc_c_diff <- nc_post[1] - nc_pre[1]
quantile(df$age)
age1 <- subset(df, age < 33)
age2 <- subset(df, age >= 33 & age < 43)
age3 <- subset(df, age >= 43 & age < 52)
age4 <- subset(df, age >= 52)
View(age1)
# finding treatment difference for age1
effect_age1 <- mean(age1$numberim.pre[treatment == 1])
# finding treatment difference for age1
effect_age1 <- mean(age1$numberim.pre["treatment" == 1])
df_treatment <- subset(df, treatment == 1)
age1 <- subset(df_treatment, age < 33)
age2 <- subset(df_treatment, age >= 33 & age < 43)
age3 <- subset(df_treatment, age >= 43 & age < 52)
age4 <- subset(df_treatment, age >= 52)
# finding treatment difference for age1
effect_age1 <- mean(age1$numberim.pre)
effect_age1 <- mean(age1$numberim.pre)
effect_age2 <- mean(age2$numberim.pre)
effect_age3 <- mean(age3$numberim.pre)
effect_age4 <- mean(age4$numberim.pre)
effect_age1 <- mean(age1$numberim.post) - mean(age1$numberim.pre)
effect_age2 <- mean(age2$numberim.post) - mean(age2$numberim.pre)
effect_age3 <- mean(age3$numberim.post) - mean(age3$numberim.pre)
effect_age4 <- mean(age4$numberim.post) - mean(age4$numberim.pre)
effect_age1 <- mean(age1$numberim.post) - mean(age1$numberim.pre)
effect_age2 <- mean(age2$numberim.post, na.rm = TRUE) - mean(age2$numberim.pre, na.rm = TRUE)
effect_age3 <- mean(age3$numberim.post, na.rm = TRUE) - mean(age3$numberim.pre, na.rm = TRUE)
effect_age4 <- mean(age4$numberim.post, na.rm = TRUE) - mean(age4$numberim.pre, na.rm = TRUE)
left <- subset(df_treatment, ideology == 1)
mid_left <- subset(df_treatment, ideology == 2)
center <- subset(df_treatment, ideology == 3)
mid_right <- subset(df_treatment, ideology == 4)
right <- subset(df_treatment, ideology == 5)
View(ctrl_attitudes)
effect_left <- mean(left$numberim.post, na.rm = T) - mean(left$numberim.pre, na.rm = T)
effect_mid_left <- mean(mid_left$numberim.post, na.rm = TRUE) - mean(mid_left$numberim.pre, na.rm = TRUE)
effect_center <- mean(center$numberim.post, na.rm = TRUE) - mean(center$numberim.pre, na.rm = TRUE)
effect_mid_right <- mean(mid_right$numberim.post, na.rm = TRUE) - mean(mid_right$numberim.pre, na.rm = TRUE)
effect_right <- mean(right$numberim.post, na.rm = TRUE) - mean(right$numberim.pre, na.rm = TRUE)
view(progresa)
library(tidyverse)
view(progresa)
summary(turnout_CE)
turnout_CE <- lm(turnout ~ candidate, data = df)
summary(turnout_CE)
turnout_CE <- lm(turnout ~ candidate, data = df)
library(tidyverse)
df <- read.csv("blackturnout.csv")
unique_years <- unique(df$year)
unique_years
unique_states <- unique(df$state)
length(unique_states)
df$CEcandidates <- ifelse(df$candidate == 1, "Black", "Non-Black")
boxplot <- ggplot(df, aes(x = CEcandidates,
y = turnout,
fill = CEcandidates)) +
geom_boxplot() +
xlab("Candidate Ethinicity") +
ylab ("Black Turnout in District") +
theme(legend.position = "none")
boxplot
turnout_CE <- lm(turnout ~ candidate, data = df)
summary(turnout_CE)
plot(df$CVAP, df$turnout, xlab = "Proportion of Co-Ethnic Voting-Age Population",
ylab = "Black Turnout",
col = ifelse(df$candidate == 1, "green", "purple"))
two_predictors <- lm(turnout ~ cnadidate * CVAP, data = df)
two_predictors <- lm(turnout ~ candidate * CVAP, data = df)
summary(two_predictors)
install.packages("vioplot")
library(vioplot)
vioplot(new_df,
aes(x = land_use,
y = total_count,
fill = land_use), na.rm = TRUE)
source("~/Documents/Spring_2023/data_science/CS_321_final/final_code.R", echo=TRUE)
setwd("~/Documents/Spring_2023/data_science/CS_321_final")
source("~/Documents/Spring_2023/data_science/CS_321_final/final_code.R", echo=TRUE)
vioplot(new_df,
aes(x = land_use,
y = total_count,
fill = land_use), na.rm = TRUE)
View(locations_df)
View(new_df)
vioplot(new_df,
aes(y = total_count,
fill = land_use), na.rm = TRUE)
vioplot(new_df,
aes(y = total_count), na.rm = TRUE)
vioplot(new_df,
aes(x = classification,
y = total_count), na.rm = TRUE)
vioplot(new_df)
boxplot <- ggplot(new_df, aes(y = total_count,
fill = typology), na.rm = TRUE) +
geom_boxplot() +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
theme(legend.position = "none")
boxplot
?aes
boxplot <- ggplot(new_df, aes(y = total_count,
fill = typology), na.rm = TRUE) +
geom_boxplot(color = land_use) +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
theme(legend.position = "none")
boxplot <- ggplot(new_df, aes(y = total_count,
fill = typology), na.rm = TRUE) +
geom_boxplot(color = new_df$land_use) +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
theme(legend.position = "none")
boxplot
boxplot <- ggplot(new_df, aes(y = total_count,
fill = typology), na.rm = TRUE) +
geom_boxplot(color = new_df$land_use) +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
scale_fill_manual(values=c("#69b3a2", "lightblue"))
theme(legend.position = "none")
boxplot
boxplot <- ggplot(new_df, aes(x + typology,
y = total_count,
fill = landu_use), na.rm = TRUE) +
geom_boxplot(color = new_df$land_use) +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
scale_fill_manual(values=c("#69b3a2", "lightblue"))
theme(legend.position = "none")
boxplot
boxplot <- ggplot(new_df, aes(x = typology,
y = total_count,
fill = landu_use), na.rm = TRUE) +
geom_boxplot(color = new_df$land_use) +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
scale_fill_manual(values=c("#69b3a2", "lightblue"))
theme(legend.position = "none")
boxplot
boxplot <- ggplot(new_df, aes(x = typology,
y = total_count,
fill = land_use), na.rm = TRUE) +
geom_boxplot(color = new_df$land_use) +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
scale_fill_manual(values=c("#69b3a2", "lightblue"))
theme(legend.position = "none")
boxplot
boxplot <- ggplot(new_df, aes(x = typology,
y = total_count,
fill = land_use,
alpha = land_use), na.rm = TRUE) +
geom_boxplot(color = new_df$land_use) +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
scale_fill_manual(values=c("#69b3a2", "lightblue"))
theme(legend.position = "none")
boxplot
boxplot <- ggplot(new_df, aes(x = typology,
y = total_count,
fill = land_use),
na.rm = TRUE) +
geom_boxplot(color = new_df$land_use) +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
scale_fill_manual(values=c("#69b3a2", "lightblue")) +
theme(legend.position = "none")
boxplot
boxplot <- ggplot(new_df, aes(x = typology,
y = total_count,
fill = land_use),
na.rm = TRUE) +
geom_boxplot(color = new_df$land_use) +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
scale_fill_manual(values=c("#69b3a2", "lightblue")) +
scale_alpha_manual(values=c(1,0.1)) +
theme(legend.position = "none")
boxplot
boxplot <- ggplot(new_df, aes(x = typology,
y = total_count,
fill = land_use),
na.rm = TRUE) +
geom_boxplot(color = new_df$land_use) +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
scale_fill_manual(values=c("#69b3a2", "lightblue")) +
theme_ipsum() +
theme(legend.position = "none")
boxplot <- ggplot(new_df, aes(x = typology,
y = total_count,
fill = land_use,
alpha = land_use),
na.rm = TRUE) +
geom_boxplot(color = new_df$land_use) +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
scale_fill_manual(values=c("#69b3a2", "lightblue")) +
scale_alpha_manual(values=c(1,0.1)) +
theme_ipsum() +
theme(legend.position = "none")
boxplot <- ggplot(new_df, aes(x = typology,
y = total_count,
fill = land_use,
alpha = land_use),
na.rm = TRUE) +
geom_boxplot(color = new_df$land_use) +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
scale_fill_manual(values=c("#69b3a2", "lightblue")) +
scale_alpha_manual(values=c(1,0.1)) +
theme(legend.position = "none")
boxplot
boxplot <- ggplot(new_df, aes(x = typology,
y = total_count
# fill = land_use),
na.rm = TRUE) +
boxplot <- ggplot(new_df, aes(x = typology,
y = total_count),
# fill = land_use),
na.rm = TRUE) +
geom_boxplot(color = new_df$land_use) +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
# scale_fill_manual(values=c("#69b3a2", "lightblue")) +
theme(legend.position = "none")
boxplot
boxplot <- ggplot(new_df, aes(x = typology,
y = total_count,
fill = typology),
na.rm = TRUE) +
geom_boxplot(color = new_df$land_use) +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
# scale_fill_manual(values=c("#69b3a2", "lightblue")) +
theme(legend.position = "none")
boxplot
boxplot <- ggplot(new_df, aes(x = typology,
y = total_count,
fill = typology),
na.rm = TRUE) +
geom_boxplot(color = new_df$land_use) +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
# scale_fill_manual(values=c("#69b3a2", "lightblue")) +
theme(legend.position = "none")
boxplot
boxplot <- ggplot(new_df, aes(y = total_count,
fill = typology),
na.rm = TRUE) +
geom_boxplot(color = new_df$land_use) +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
# scale_fill_manual(values=c("#69b3a2", "lightblue")) +
theme(legend.position = "none")
boxplot
boxplot <- ggplot(new_df, aes(y = total_count,
fill = typology),
na.rm = TRUE) +
geom_boxplot(color = new_df$land_use) +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
theme(legend.position = "none")
boxplot
boxplot <- ggplot(new_df, aes(y = total_count,
fill = typology),
na.rm = TRUE) +
geom_boxplot(color = new_df$typology) +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
# scale_fill_manual(values=c("#69b3a2", "lightblue")) +
theme(legend.position = "none")
boxplot
boxplot <- ggplot(new_df, aes(y = total_count,
fill = typology),
na.rm = TRUE) +
geom_boxplot() +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
# scale_fill_manual(values=c("#69b3a2", "lightblue")) +
theme(legend.position = "none")
boxplot
boxplot <- ggplot(new_df, aes(x = typology,
y = total_count,
fill = land_use),
na.rm = TRUE) +
geom_boxplot() +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
# scale_fill_manual(values=c("#69b3a2", "lightblue")) +
theme(legend.position = "none")
boxplot
boxplot <- ggplot(new_df, aes(x = typology,
y = total_count,
fill = land_use),
na.rm = TRUE) +
geom_boxplot() +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
scale_fill_manual(values=c("#69b3a2", "lightblue")) +
theme(legend.position = "none")
boxplot
boxplot <- ggplot(new_df, aes(x = typology,
y = total_count,
fill = land_use),
na.rm = TRUE) +
geom_boxplot() +
xlab("Land Use Diversity") +
ylab ("Number of People Moving") +
scale_fill_manual(values=c("#69b3a2", "orange")) +
theme(legend.position = "none")
boxplot
unique(new_df$typology)
setwd("~/Documents/Spring_2023/data_science/CS_321_final")
